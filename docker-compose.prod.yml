version: '3.8'

services:
  nats-server:
    build: 
      context: .
      args:
        BUILD_TYPE: prod
    container_name: nats-server-prod
    ports:
      - "4222:4222"  # NATS client port
      - "8222:8222"  # HTTP monitoring port
    volumes:
      # Mount configuration
      - ./nats-server.conf:/etc/nats/nats-server.conf:ro
      # Mount credentials directory (read-only)
      - ./creds:/etc/nats/creds:ro
      # Mount certificates for TLS (read-only)
      - ./certs:/etc/nats/certs:ro
      # Mount JWT directory (read-only)
      - ./jwt:/etc/nats/jwt:ro
      # Persistent storage for JetStream
      - nats-prod-data:/var/lib/nats
      # Logs
      - nats-prod-logs:/var/log/nats
    environment:
      - NATS_SERVER_NAME=nats-server-prod
      - NATS_DEBUG=false
      - NATS_TRACE=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # Production monitoring
  nats-monitor:
    image: natsio/prometheus-nats-exporter:latest
    container_name: nats-monitor-prod
    depends_on:
      - nats-server
    ports:
      - "7777:7777"
    environment:
      - NATS_URL=nats://nats-server:4222
    command: ["-varz", "-connz", "-serverz", "-subz", "-routez", "-gatewayz"]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: nats-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: nats-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

volumes:
  nats-prod-data:
    driver: local
  nats-prod-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: nats-prod-network
    driver: bridge
